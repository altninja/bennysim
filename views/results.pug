extends _layout

block content
	.row
		.col-md-12
			a.btn.btn-primary.pull-right(href='/', style="margin-top: 10px;") New Simulation
			h1 BennySim Network Simulation Results
			hr
			.well(style="padding: 10px; background: rgb(87, 101, 116); color: #fff;")
				h3(style="margin: 0px;") Total Elapsed Simulation Time: #{results.totalTime} Days
			row.text-center
				.col-md-2.well(style="margin-right: 10px; background: rgb(46, 134, 222);")
					h2 Users
					h2 #{results.skUsers} Users
				.col-md-2.well(style="margin-right: 10px; background: rgb(238, 82, 83);")
					h2 Sales
					h2 #{results.skSales} Sales
				.col-md-4.well(style="margin-right: 10px; background: rgb(29, 209, 161);")
					h2 Revenue
					h2 #{results.skRevenue} KEY
				.col-md-3.well(style="background: rgb(255, 159, 67);")
					h2 Deposits
					h2 #{results.skTotalDeposited} KEY
		
	.row
		.col-md-12
			ul.nav.nav-tabs(role='tablist')
				li.active(role='presentation')
					a(href='#users', aria-controls='home', role='tab', data-toggle='tab') Users
				li(role='presentation')
					a(href='#sales', aria-controls='profile', role='tab', data-toggle='tab') Sales
				li(role='presentation')
					a(href='#revenue', aria-controls='messages', role='tab', data-toggle='tab') Revenue
				li(role='presentation')
					a(href='#deposits', aria-controls='settings', role='tab', data-toggle='tab') Deposits
			
			.tab-content
				#users.tab-pane.active(role='tabpanel')
					.row
						h2 User Charts
						.col-md-6
							canvas#totalUsers
						.col-md-6
							canvas#dailyUsers
					hr
					table.table.table-striped#usersTable
						thead
							tr
								th User ID
								th Address
								th Key Balance
								th Turn
								th
							tbody
								for user in users
									tr
										td
											p #{user.userId}
										td
											p #{user.address}
										td
											p #{user.keyBalance}
										td
											p #{user.turn}
										td
											a.btn.btn-xs.btn-info(href='#')
												| 
												i.fa.fa-leaf
				#sales.tab-pane(role='tabpanel')
					.row
						h2 Sales Charts
						.col-md-6
							canvas#totalSales
						.col-md-6
							canvas#dailySales
					hr
					table.table.table-striped#salesTable
						thead
							tr
								th Product ID
								th Price
								th Vendor ID
								th Turn
								th
							tbody
								for sale in sales
									tr
										td
											p #{sale.sku}
										td
											p #{sale.price}
										td
											p #{sale.vendorId}
										td
											p #{sale.turn}
										td
											a.btn.btn-xs.btn-info(href='#')
												| 
												i.fa.fa-leaf

				#revenue.tab-pane(role='tabpanel')
					.row
						h2 Revenue Charts (In KEY)
						.col-md-6
							canvas#totalRevenue
						.col-md-6
							canvas#dailyRevenue
					hr

				#deposits.tab-pane(role='tabpanel')
					.row
						h2 Deposit Charts (In KEY)
						.col-md-6
							canvas#totalDeposited
						.col-md-6
							canvas#dailyDeposited
					hr
					table.table.table-striped#depositsTable
						thead
							tr
								th User ID
								th Amount
								th Turn
								th
							tbody
								for deposit in deposits
									tr
										td
											p #{deposit.userId}
										td
											p #{deposit.deposit}
										td
											p #{deposit.turn}
										td
											a.btn.btn-xs.btn-info(href='#')
												| 
												i.fa.fa-leaf
	script.
		let ctx1 = document.getElementById('totalUsers').getContext('2d')
		let ctx2 = document.getElementById('dailyUsers').getContext('2d')
		let ctx3 = document.getElementById('totalSales').getContext('2d')
		let ctx4 = document.getElementById('dailySales').getContext('2d')
		let ctx5 = document.getElementById('totalRevenue').getContext('2d')
		let ctx6 = document.getElementById('dailyRevenue').getContext('2d')
		let ctx7 = document.getElementById('totalDeposited').getContext('2d')
		let ctx8 = document.getElementById('dailyDeposited').getContext('2d')
		
		// USERS
		let chart = new Chart(ctx1, {
		    type: 'line',
		    data: {
		        labels: [#{results.timeLabels}], // array of strings eg: ['1','2','3']
		        datasets: [{
		            label: 'Total Users',
		            backgroundColor: 'rgb(84, 160, 255)',
		            borderColor: 'rgb(84, 160, 255)',
		            data: [#{results.totalUsers}] // array of numbers eg: [1,2,3]
		        }]
		    },
		    options: {}
		})

		let chart2 = new Chart(ctx2, {
		    type: 'bar',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'Users Per Day',
		            backgroundColor: 'rgb(46, 134, 222)',
		            borderColor: 'rgb(46, 134, 222)',
		            data: [#{results.usersPerTurn}]
		        }]
		    },
		    options: {}
		})

		// SALES
		let chart3 = new Chart(ctx3, {
		    type: 'line',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'Total Sales',
		            backgroundColor: 'rgb(255, 107, 107)',
		            borderColor: 'rgb(255, 107, 107)',
		            data: [#{results.totalSales}]
		        }]
		    },
		    options: {}
		})

		let chart4 = new Chart(ctx4, {
		    type: 'bar',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'Sales Per Day',
		            backgroundColor: 'rgb(238, 82, 83)',
		            borderColor: 'rgb(238, 82, 83)',
		            data: [#{results.salesPerTurn}]
		        }]
		    },
		    options: {}
		})

		// REVENUE
		let chart5 = new Chart(ctx5, {
		    type: 'line',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'Total Revenue',
		            backgroundColor: 'rgb(16, 172, 132)',
		            borderColor: 'rgb(16, 172, 132)',
		            data: [#{results.totalRevenue}]
		        }]
		    },
		    options: {}
		})

		let chart6 = new Chart(ctx6, {
		    type: 'bar',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'Revenue Per Day',
		            backgroundColor: 'rgb(29, 209, 161)',
		            borderColor: 'rgb(29, 209, 161)',
		            data: [#{results.revenuePerTurn}]
		        }]
		    },
		    options: {}
		})

		// DEPOSITS
		let chart7 = new Chart(ctx7, {
		    type: 'line',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'Total KEY Deposited',
		            backgroundColor: 'rgb(254, 202, 87)',
		            borderColor: 'rgb(254, 202, 87)',
		            data: [#{results.totalDeposits}]
		        }]
		    },
		    options: {}
		})

		let chart8 = new Chart(ctx8, {
		    type: 'bar',
		    data: {
		        labels: [#{results.timeLabels}],
		        datasets: [{
		            label: 'KEY Deposited Per Day',
		            backgroundColor: 'rgb(255, 159, 67)',
		            borderColor: 'rgb(255, 159, 67)',
		            data: [#{results.depositsPerTurn}]
		        }]
		    },
		    options: {}
		})
